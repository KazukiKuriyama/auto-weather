name: Update Weather

on:
  workflow_dispatch:

  schedule:
    - cron:  "0 1 * * *" # 日本時間AM9時

jobs:
  build:
    runs-on: ubuntu-latest
    
    # mainブランチのみでジョブを実行するよう制限
    if: github.ref == 'refs/heads/main'  

    steps:
      - uses: actions/checkout@v2
        with:
          repository: KazukiKuriyama/auto-weather
          token: ${{ secrets.GH_TOKEN }}
          path: auto-weather

      - name: Install necessary packages
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Get Weather Data and Update File
        run: |
          # 天気APIから大阪の天気情報を取得して書き込み
          # 必要に応じてAPIキーとエンドポイントを変更してください。
          response=$(curl -s "https://api.openweathermap.org/data/2.5/weather?q=Osaka,jp&appid=${{ secrets.WEATHER_API_KEY }}&units=metric")
          weather=$(echo $response | jq -r ".weather[0].description")
          temperature=$(echo $response | jq -r ".main.temp")
          date=$(date "+%Y-%m-%d")

          # 天気情報を1行でファイルに追加
          cd auto-weather
          echo "$date: 大阪の天気は $weather で、気温は $temperature°C です。"
          echo "$date: 大阪の天気は $weather で、気温は $temperature°C です。\n" >> weather_data.md
          cat weather_data.md
          
      - name: Display contents of weather_data.md
        run: |
          cd auto-weather
          cat weather_data.md

      - name: Commit and push
        run: |
          cd auto-weather
          git config --global user.email ${{ secrets.USER_EMAIL }}
          git config --global user.name ${{ secrets.USER_NAME }}
          git add .
          
          # Display git status to verify changes are staged
          git status
          git commit -m 'Update Osaka weather data'
          git push origin main
